<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='https://yetibot.com/' rel='self' type='application/rss+xml'/>
<title>
Yetibot
</title>
<link>
https://yetibot.com/
</link>
<description>
Docs and blog posts for Yetibot
</description>
<lastBuildDate>
Mon, 01 Apr 2019 14:19:13 +0000
</lastBuildDate>
<generator>
clj-rss
</generator>
<item>
<guid>
https://yetibot.com/blog/2019-03-26-yetibot-workshop-at-ebay
</guid>
<link>
https://yetibot.com/blog/2019-03-26-yetibot-workshop-at-ebay
</link>
<title>
Yetibot Workshop @ eBay San Jose
</title>
<description>
&lt;p&gt;&lt;img src=&quot;/img/yetibot_workshop.jpg&quot; alt=&quot;Yetibot Workshop&quot; /&gt;&lt;/p&gt;&lt;p&gt;As part of eBay's internal Front End conference, &lt;a href='https://github.com/devth'&gt;@devth&lt;/a&gt; gave a &quot;Contributing to Yetibot&quot; workshop covering:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;A demo of some of Yetibot's fun and useful features&lt;/li&gt;&lt;li&gt;Brief history of the project&lt;/li&gt;&lt;li&gt;Fundamentals of Yetibot usage:&lt;ul&gt;&lt;li&gt;Aliases&lt;/li&gt;&lt;li&gt;Expression composition via pipes&lt;/li&gt;&lt;li&gt;Values and Lists&lt;/li&gt;&lt;li&gt;Xargs&lt;/li&gt;&lt;li&gt;Data + render&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Livecoding a new feature, adding &lt;code&gt;forecast&lt;/code&gt; support to the existing weather  command (&lt;a href='https://github.com/yetibot/yetibot/pull/901'&gt;resulting PR!&lt;/a&gt;) with  the goal of showing off the amazing power of the Clojure language and the  interactive development workflow&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The audience consisted of FE engineers who had zero Clojure experience. During the livecoding session we went over some Clojure language basics.&lt;/p&gt;&lt;p&gt;To explain fundamentals, we deconstructed the &lt;code&gt;alltemps&lt;/code&gt; alias, breaking it down to its individual pieces and testing each command in isolation.&lt;/p&gt;&lt;p&gt;&lt;div class=&quot;video-responsive&quot;&gt; &lt;iframe   width=&quot;854&quot; height=&quot;480&quot;   src=&quot;https://www.youtube.com/embed/tcFvu6CL2fg?rel=0&quot;   frameborder=&quot;0&quot;   allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot;   allowfullscreen&gt; &lt;/iframe&gt; &lt;/div&gt;&lt;/p&gt;&lt;p&gt;This was a fun exercise, but to make it even more clear we're planning to build a front end component that, given an expression, visually breaks down the expression into its parts, showing the result of each command in the pipeline and the corresponding data behind them (follow along on &lt;a href='https://github.com/yetibot/yetibot.github.io/issues/6'&gt;#900&lt;/a&gt;).&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/yetibot_stickers.jpg&quot; alt=&quot;Yetibot Stickers&quot; /&gt;&lt;/p&gt;&lt;p&gt;We now have Yetibot stickers! Ping &lt;code&gt;@devth&lt;/code&gt; (Slack, Twitter, etc) if you want one or three mailed to you!&lt;/p&gt;
</description>
<pubDate>
Tue, 26 Mar 2019 00:00:00 +0000
</pubDate>
</item>
<item>
<guid>
https://yetibot.com/blog/2019-02-20-moving-mutable-config-to-the-database
</guid>
<link>
https://yetibot.com/blog/2019-02-20-moving-mutable-config-to-the-database
</link>
<title>
Moving mutable configuration to the database
</title>
<description>
&lt;p&gt;It's time to move &lt;a href='https://yetibot.com/ops-guide#mutable'&gt;mutable config&lt;/a&gt; to the database in adherence with &lt;a href='https://www.digitalocean.com/community/tutorials/what-is-immutable-infrastructure'&gt;immutable infrastructure&lt;/a&gt; practices. Yetibot embraces &lt;a href='https://devth.com/2018/dec-deep-environmental-config'&gt;modern infrastructure&lt;/a&gt;. We made a lot of progress moving to mostly-immutable configuration. This is the next step, and is done as of Yetibot &lt;code&gt;0.5.0&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;One reason why we haven't done this up till now is that mutable config has never been relied upon much. Its purpose was to:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Store channel-specific configuration (e.g. &lt;code&gt;jira-project&lt;/code&gt;, &lt;code&gt;broadcast&lt;/code&gt;,   &lt;code&gt;jenkins-default&lt;/code&gt; or any other arbitrary room-specific key/value) for the   &lt;code&gt;channel&lt;/code&gt; command&lt;/li&gt;&lt;li&gt;Store channel-specific disabled categories for the &lt;code&gt;category&lt;/code&gt; command&lt;/li&gt;&lt;li&gt;Remember which channels Yetibot should join upon connecting to IRC&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Previously these values would be persisted to a local edn file which by default lives at &lt;code&gt;config/mutable.edn&lt;/code&gt;. However, in modern cloud environments this is not durable. For example when running Yetibot on Kubernetes this would be lost on each pod creation (unless a durable disk was mounted, but that's an unnecessary complication). We already have a durable place to store keys and values: the Postgres database.&lt;/p&gt;&lt;p&gt;All of these use cases will now move to a single &lt;code&gt;yetibot&amp;#95;channels&lt;/code&gt; table.&lt;/p&gt;&lt;h2 id=&quot;what&amp;#95;does&amp;#95;this&amp;#95;mean&amp;#95;for&amp;#95;me?&quot;&gt;What does this mean for me?&lt;/h2&gt;&lt;p&gt;Given that mutable config hasn't been heavily used the migration should be quite painless. We are not providing an automated migration tool, so your options are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Do nothing if you're not using any mutable config yet (quite likely) üòÖ&lt;/li&gt;&lt;li&gt;Use Yetibot to recreate the config, e.g. &lt;code&gt;channel set jia-project myjira&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Look in &lt;code&gt;config/mutable.edn&lt;/code&gt; and manually copy the key/values and chat source   rooms to the &lt;code&gt;yetibot&amp;#95;channels&lt;/code&gt; Postgres table. For example, if your   &lt;code&gt;mutable.edn&lt;/code&gt; looks like:&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code class=&quot;edn&quot;&gt;   {:room
    {:ybslack
     {&amp;quot;#general&amp;quot; {:disabled-categories #{:crude}},
      &amp;quot;#dev&amp;quot; {&amp;quot;jira-project&amp;quot; &amp;quot;YETIBOT&amp;quot;,
              &amp;quot;nope&amp;quot; &amp;quot;lol&amp;quot;,
              :disabled-categories #{:crude}}}}}
   &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   You would create rows in &lt;code&gt;yetibot&amp;#95;channels&lt;/code&gt;:&lt;/p&gt;&lt;p&gt;&lt;table&gt; &lt;tr&gt;   &lt;th&gt;&lt;code&gt;chat&amp;#95;source&amp;#95;adapter&lt;/code&gt;&lt;/th&gt;   &lt;th&gt;&lt;code&gt;chat&amp;#95;source&amp;#95;room&lt;/code&gt;&lt;/th&gt;   &lt;th&gt;&lt;code&gt;key&lt;/code&gt;&lt;/th&gt;   &lt;th&gt;&lt;code&gt;value&lt;/code&gt;&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt;   &lt;td&gt;:ybslack&lt;/td&gt;   &lt;td&gt;#general&lt;/td&gt;   &lt;td&gt;disabled-categories&lt;/td&gt;   &lt;td&gt;#{:crude}&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;   &lt;td&gt;:ybslack&lt;/td&gt;   &lt;td&gt;#dev&lt;/td&gt;   &lt;td&gt;jira-project&lt;/td&gt;   &lt;td&gt;YETIBOT&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;   &lt;td&gt;:ybslack&lt;/td&gt;   &lt;td&gt;#dev&lt;/td&gt;   &lt;td&gt;nope&lt;/td&gt;   &lt;td&gt;lol&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;   &lt;td&gt;:ybslack&lt;/td&gt;   &lt;td&gt;#dev&lt;/td&gt;   &lt;td&gt;disabled-categories&lt;/td&gt;   &lt;td&gt;#{:crude}&lt;/td&gt; &lt;/tr&gt;&lt;/p&gt;&lt;p&gt;&lt;/table&gt;&lt;/p&gt;&lt;p&gt;All values in the table are strings.&lt;/p&gt;&lt;p&gt;If you use IRC, your channels to join config will be lost as well. Simply re-invite Yetibot to the proper channels and they will be stored in the database.&lt;/p&gt;&lt;p&gt;Here's the &lt;a href='https://github.com/yetibot/yetibot.core/pull/61'&gt;Pull Request&lt;/a&gt; that made these changes.&lt;/p&gt;
</description>
<pubDate>
Wed, 20 Feb 2019 00:00:00 +0000
</pubDate>
</item>
<item>
<guid>
https://yetibot.com/blog/2019-01-03-yetibot-2019-roadmap
</guid>
<link>
https://yetibot.com/blog/2019-01-03-yetibot-2019-roadmap
</link>
<title>
Looking back at 2018 and forward for 2019
</title>
<description>
&lt;p&gt;We made a ton of progress on Yetibot in 2018 and gained some new contributors in the process! A few high level contributions include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;launched this site and started a major effort to write comprehensive docs&lt;/li&gt;&lt;li&gt;added &lt;code&gt;pagerduty&lt;/code&gt;&lt;/li&gt;&lt;li&gt;added &lt;code&gt;catchpoint&lt;/code&gt;&lt;/li&gt;&lt;li&gt;migrated &lt;code&gt;weather&lt;/code&gt; to a new API provider&lt;/li&gt;&lt;li&gt;added &lt;code&gt;karma&lt;/code&gt;&lt;/li&gt;&lt;li&gt;added &lt;code&gt;github releases&lt;/code&gt;&lt;/li&gt;&lt;li&gt;added support for Slack Reaction-based observers ü§Ø&lt;/li&gt;&lt;li&gt;added &lt;code&gt;gcs&lt;/code&gt; for Google Cloud Storage&lt;/li&gt;&lt;li&gt;added &lt;code&gt;cron&lt;/code&gt; command&lt;/li&gt;&lt;li&gt;created a GraphQL API&lt;/li&gt;&lt;li&gt;built a new web dashboard and shipped it as  &lt;a href='https://www.npmjs.com/package/yetibot-dashboard'&gt;&lt;code&gt;yetibot-dashboard&lt;/code&gt;&lt;/a&gt;npm module&lt;/li&gt;&lt;li&gt;added &lt;code&gt;render&lt;/code&gt; for custom command output using its &lt;code&gt;data&lt;/code&gt;&lt;/li&gt;&lt;li&gt;improved the way we record chat history in the database, including Yetibot's  own output&lt;/li&gt;&lt;li&gt;fixed a ton of bugs üòÅ&lt;/li&gt;&lt;li&gt;made errors from a command explicit, enabling us to abort a pipeline early  when there's an error&lt;/li&gt;&lt;li&gt;improved Slack auto-reconnect&lt;/li&gt;&lt;li&gt;added ability to reply to threads in Slack&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;contributors&amp;#95;in&amp;#95;2018&amp;#95;üí•&quot;&gt;Contributors in 2018 üí•&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://github.com/cheukyin699'&gt;@cheukyin699&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/cvic'&gt;@cvic&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/devth'&gt;@devth&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/gaberger'&gt;@gaberger&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/jcorrado'&gt;@jcorrado&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/kaffein'&gt;@kaffein&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/linuxsoares'&gt;@linuxsoares&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='https://github.com/teodorlu'&gt;@teodorlu&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;2019&amp;#95;roadmap&quot;&gt;2019 Roadmap&lt;/h2&gt;&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;&lt;p&gt;While we made a great start, the docs are not quite there. This will be a focus of 2019: continuing to improve coverage of documentation!&lt;/p&gt;&lt;p&gt;For user docs we'll add coverage and examples for more commands, as well as continue to add more complex examples that showcase some of Yetibot's more advanced features.&lt;/p&gt;&lt;p&gt;For dev docs we'll improve documentation of Yetibot internals and make it easier for new contributors to ramp up.&lt;/p&gt;&lt;h3 id=&quot;web&amp;#95;based&amp;#95;repl&quot;&gt;Web based REPL&lt;/h3&gt;&lt;p&gt;We'll work on a truly interactive Yetibot REPL React component and use it on the docs site so users can more readily play with Yetibot while exploring the docs.&lt;/p&gt;&lt;h3 id=&quot;data&quot;&gt;Data&lt;/h3&gt;&lt;p&gt;Toward the end of 2018 we experimented with propagating data behind pipes for each command. We'll continue exposing data on all commands and play around with some potential usage before solidifying this potentially superpower feature.&lt;/p&gt;&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;&lt;p&gt;Command configuration in Yetibot is currently spec'd out with schema. We'll move to &lt;code&gt;clojure.spec&lt;/code&gt; and start to leverage some of its capabilities for things like:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;web-based config validation&lt;/li&gt;&lt;li&gt;config generation (as opposed to a manually maintained and potentially stale  &lt;code&gt;config.sample.edn&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;friendly command output with help docs when a command is not yet configured&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;dashboard&quot;&gt;Dashboard&lt;/h3&gt;&lt;p&gt;The &lt;a href='https://public.yetibot.com'&gt;current dashboard&lt;/a&gt; was a great starting point. Now we need to make it more usable by improving the way history renders, adding more filters to history to search on, adding pagination or infinite scroll, and improving visibility into the health of the Yetibot instance.&lt;/p&gt;&lt;h3 id=&quot;screencasts&quot;&gt;Screencasts&lt;/h3&gt;&lt;p&gt;We'll post more screencasts that demonstrate contributing to Yetibot and what an interactive REPL-based development workflow looks like. We'll try to utilize Clojure 1.10's new features as well as the more experimental stuff that Cognitect is putting out, like how REBL fits into our dev workflow.&lt;/p&gt;&lt;h3 id=&quot;and&amp;#95;much&amp;#95;more&quot;&gt;And much more&lt;/h3&gt;&lt;p&gt;We'll continue to build fun stuff as it comes up, like we've done all along. Feel free to &lt;a href='https://slack.yetibot.com'&gt;join us!&lt;/a&gt;&lt;/p&gt;&lt;p&gt;And check out the &lt;a href='https://github.com/yetibot/yetibot/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22'&gt;&lt;code&gt;good first issue&lt;/code&gt;&lt;/a&gt; issues in the tracker to jump into contributing!&lt;/p&gt;
</description>
<pubDate>
Thu, 03 Jan 2019 00:00:00 +0000
</pubDate>
</item>
<item>
<guid>
https://yetibot.com/blog/2018-03-24-launch
</guid>
<link>
https://yetibot.com/blog/2018-03-24-launch
</link>
<title>
Yetibot.com Launch
</title>
<description>
&lt;p&gt;Yetibot finally has a site!&lt;/p&gt;&lt;p&gt;Check out the &lt;a href='https://github.com/yetibot/yetibot.github.io'&gt;source on GitHub&lt;/a&gt; here if you're so inclined. It's powered by &lt;a href='http://cryogenweb.org/'&gt;Cryogen&lt;/a&gt;, the Clojure-based static site generator.&lt;/p&gt;&lt;p&gt;One of the goals with launching the site was to have inline interactive Yetibot examples that uses the GraphQL API on the public Yetibot instance to evaluate! See the &lt;a href='/user-guide'&gt;User Guide&lt;/a&gt; to check out the interactive examples in the docs.&lt;/p&gt;&lt;p&gt;The site and docs are pretty bare bones but we'll improve it over time.&lt;/p&gt;
</description>
<pubDate>
Sat, 24 Mar 2018 00:00:00 +0000
</pubDate>
</item>
</channel>
</rss>
